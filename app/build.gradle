repositories {
	mavenCentral()
}
apply plugin: 'com.android.application'

configurations {
	playstoreImplementation
	freeImplementation
}

android {
	compileSdkVersion 31
//	buildToolsVersion "27.0.3"

	defaultConfig {
		applicationId "org.tigase.messenger.phone.pro"
		minSdkVersion 29
		targetSdkVersion 30
		versionCode 94
		versionName "3.2.3"
		multiDexEnabled true

//		jackOptions {
//			enabled true
//		}
	}
	signingConfigs {
		release {
			storeFile file(System.getProperty("user.home") + "/android-release.keystore")
			keyAlias ''
			storePassword ''
			keyPassword ''
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
		debug {
			debuggable true
			versionNameSuffix " Debug"
		}
	}
	compileOptions {
//		sourceCompatibility JavaVersion.VERSION_1_8
//		targetCompatibility JavaVersion.VERSION_1_8
	}
	lintOptions {
		abortOnError false
	}

	flavorDimensions("distribution")

	productFlavors {
		free {
			dimension "distribution"
			versionNameSuffix ".f"
		}
		playstore {
			dimension "distribution"
			versionNameSuffix ".p"
		}
	}

	sourceSets {
		free {
			java {
				srcDirs 'src/free/java'
			}
		}
		playstore {
			java {
				srcDirs 'src/playstore/java'
			}
		}
	}

}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	testImplementation 'junit:junit:4.13.2'
	implementation "tigase:jaxmpp-android:$jaxmppVersion"
	implementation "tigase:jaxmpp-j2se:$jaxmppVersion"
	implementation 'tigase:tigase-xmltools:4.0.1'
	implementation "tigase:jaxmpp-muc:$jaxmppVersion"
	implementation "tigase:jaxmpp-chat:$jaxmppVersion"
	implementation "tigase:jaxmpp-deliveryreceipts:$jaxmppVersion"
	implementation "tigase:jaxmpp-presence:$jaxmppVersion"
	implementation "tigase:jaxmpp-roster:$jaxmppVersion"
	implementation "tigase:jaxmpp-registration:$jaxmppVersion"
	implementation "tigase:jaxmpp-vcard:$jaxmppVersion"
	implementation "tigase:jaxmpp-filetransfer:$jaxmppVersion"
	implementation "tigase:jaxmpp-socks5:$jaxmppVersion"
	implementation "tigase:jaxmpp-pubsub:$jaxmppVersion"
	implementation "tigase:jaxmpp-im:$jaxmppVersion"
	implementation "tigase:jaxmpp-core:$jaxmppVersion"
	implementation "tigase:jaxmpp-adhoc:$jaxmppVersion"
	implementation "tigase:jaxmpp-push:$jaxmppVersion"
	implementation "tigase:jaxmpp-xep0136:$jaxmppVersion"
	implementation "tigase:jaxmpp-mam:$jaxmppVersion"
	implementation "tigase:jaxmpp-httpfileupload:$jaxmppVersion"
	implementation "tigase:jaxmpp-omemo:$jaxmppVersion"
	implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
	implementation 'org.webrtc:google-webrtc:1.0.32006'
	playstoreImplementation('com.google.firebase:firebase-messaging:22.0.0')
	implementation 'org.jetbrains:annotations:15.0'

	implementation 'com.android.support:multidex:2.0.1'
	implementation 'androidx.core:core-ktx:1.6.0'
	implementation 'androidx.appcompat:appcompat:1.3.1'
	implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
	implementation "androidx.preference:preference:1.1.1"
	implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
	implementation 'com.google.android.material:material:1.4.0'
}

afterEvaluate {project ->
	def propsFile = rootProject.file('keystore.properties')
	def configName = 'release'

	if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
		def props = new Properties()
		props.load(new FileInputStream(propsFile))
		android.signingConfigs[configName].storeFile = file(props['storeFile'])
		android.signingConfigs[configName].storePassword = props['storePassword']
		android.signingConfigs[configName].keyAlias = props['keyAlias']
		android.signingConfigs[configName].keyPassword = props['keyPassword']
	}
}

apply plugin: 'com.google.gms.google-services'
